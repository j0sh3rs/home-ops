---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app atuin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      atuin:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: atuin-secrets
          init-config:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 2.0.3@sha256:0927d32e384d2ee38d861ea9de23acb3db8a6ac89ad1334d7cd4aacd2b3bf5ab
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/atuinsh/atuin
              tag: v18.10.0@sha256:4a29feda6f352581ece849807445fe1f50f2074b4643b7bfe62b27e23705b068
            env:
              ATUIN_HOST: 0.0.0.0
              ATUIN_PORT: &port 80
              ATUIN_OPEN_REGISTRATION: 'false'
              ATUIN_METRICS__ENABLE: 'true'
              ATUIN_METRICS__HOST: 0.0.0.0
              ATUIN_METRICS__PORT: &metricsPort 8080
              ATUIN_TLS_ENABLE: 'false'
            envFrom:
              - secretRef:
                  name: atuin-secrets
            args: ['server', 'start']
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            primary: true
            port: *port
          metrics:
            port: *metricsPort
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    route:
      app:
        hostnames: ['sh.bth.wtf']
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        type: emptyDir
